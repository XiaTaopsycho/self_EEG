{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib qt \n",
    "import mne\n",
    "import os\n",
    "from mne_bids import write_raw_bids,make_bids_basename"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define the raw file name and get each subeject file name\n",
    "raw_fname=('raw_fif/')\n",
    "subjectlist=os.listdir(raw_fname)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "for subject in subjectlist:\n",
    "    montage=mne.channels.read_montage('standard_1020')#define the montage\n",
    "    raw=mne.io.read_raw_fif(raw_fname + subject,montage)# read raw file by subject name\n",
    "    events,events_id=mne.events_from_annotations(raw,event_id='auto')#get events and events_id from annotations\n",
    "    bids_basename = make_bids_basename(subject[3:5], task='Moral')#make bids_base name, we can define \"subject\" \"task\"\"session\" and so on\n",
    "    write_raw_bids(raw, bids_basename=bids_basename, output_path='./BIDS',event_id=events_id,events_data=events,overwrite=True)# now we can converted raw instance to BIDS"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
